name: Deploy CodeSprint Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Frontend Docker Image
        run: docker build -t nischalkshaj/code_sprint_frontend:latest --build-arg NEXT_APP_ENV='production' --build-arg NEXT_PUBLIC_SERVER_URL='${{ secrets.NEXT_PUBLIC_SERVER_URL }}' .

      - name: Publish Image to Docker Hub
        run: docker push nischalkshaj/code_sprint_frontend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull the image from Docker Hub
        run: docker pull nischalkshaj/code_sprint_frontend:latest

      - name: Stop and Remove Existing Frontend Container
        run: |
          if [ $(docker ps -q -f name=codesprint-frontend-container) ]; then
            docker stop codesprint-frontend-container
            docker rm codesprint-frontend-container
          fi

      - name: Run Frontend Docker Container
        run: |
          docker run -d -p 80:80 \
          --name codesprint-frontend-container \
          --restart unless-stopped \
          nischalkshaj/code_sprint_frontend:latest

      - name: Check Logs if Frontend Container Fails
        if: failure()
        run: docker logs codesprint-frontend-container
